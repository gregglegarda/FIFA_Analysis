library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance","Reactions","BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
#hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
#hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
#M <- cor(fifa)
#corrplot(M, method="number")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance","Reactions","BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
#M <- cor(fifa)
#corrplot(M, method="number")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance","Reactions","BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
M <- cor(fifa)
corrplot(M, method="number")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance", 'BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
M <- cor(fifa)
corrplot(M, method="number")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance", "BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
M <- cor(fifa)
corrplot(M, method="number")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance", "BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
M <- cor(fifa)
corrplot(M, method="cirlce")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance", "BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
M <- cor(fifa)
corrplot(M, method="circle")
library(corrplot)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#subset data
fifacols <- c("Penalties", "Aggression","Age", "Stamina","ShotPower","Balance", "BallControl","LongPassing","HeadingAccuracy", "Strength")
fifa <- fifa[fifacols]
hist(fifa$Penalties, main="Histogram of Penalties", xlab="Skill in Penalties", ylab="Frequency", col=barcolors)
hist(fifa$Aggression, main="Histogram of Aggression", xlab="Player Aggression Score", ylab="Frequency", col=barcolors)
M <- cor(fifa)
corrplot(M, method="circle")
M
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data
biplot(prscale,1:2, scale =0)
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA 1 & 2
biplot(prscale,2:3, scale =0)
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
biplot(prscale,1:2, scale =0)
biplot(prscale,2:3, scale =0)
biplot(prscale,3:4, scale =0)
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
type = "b")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale)
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
type = "b")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, xlab = "Principal Component",type = "b")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, xlab = "Principal Component",type = "l")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale,type = "l")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale,main="PCA", type = "l")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale,main="PCA", type = "l", col="barcolors")
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale,main="PCA", type = "l", col="barcolors")
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale,main="PCA", type = "l", col=barcolors)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, main="PCA", xlab="Components", type = "l", col=barcolors)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(cumsum(prscale), main="PCA", type = "l", col=barcolors)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, main="PCA", type = "l", col=barcolors)
prscalesum <- cumsum(prscale)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, main="PCA", type = "l", col=barcolors)
barcolors = c("green", "violet", "orange", "blue", "pink", "red", "yellow", "cyan")
#scale data
prscale <- prcomp(fifa, scale=TRUE)
#summary of scaled data
summary(prscale)
#biplot of scaled data PCA
#biplot(prscale,1:2, scale =0)
#biplot(prscale,2:3, scale =0)
#biplot(prscale,3:4, scale =0)
plot(prscale, main="PCA", type = "l", col=barcolors)
library(pls)
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
library(pls)
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
validationplot(pcr.fit, val.type="MSEP")
library(pls)
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
validationplot(pcr.fit, val.type="MSEP")
pcr.pred=predict(pcr.fit, ncomp=6)
library(pls)
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
validationplot(pcr.fit, val.type="MSEP")
pcr.pred=predict(pcr.fit, ncomp=6)
pcr.pred
library(pls)
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa,subset=train, scale=TRUE, validation="CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa,subset=train, scale=TRUE, validation="CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
preplot(pcr.fit)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#pcr.pred=predict(pcr.fit, ncomp=6)
#pcr.pred
View(fifa)
View(fifa)
View(fifa)
View(fifa)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = fifa(1:nrow(x), nrow(x)/2)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sampe(1:nrow(x), nrow(x)/2)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(x), nrow(x)/2)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#pcr.pred=predict(pcr.fit, ncomp=6)
#pcr.pred
View(fifa.test)
View(fifa.test)
View(fifa.test)
View(fifa)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties~., data = train,scale =TRUE, validation = "CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties~., data = train,scale =TRUE, validation = "CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties~., data = fifa[train], scale =TRUE, validation = "CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties~., data = train, scale =TRUE, validation = "CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties ~ ., data = fifa[train], scale =TRUE, validation = "CV")
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties ~ ., data = fifa[train,], scale =TRUE, validation = "CV")
pcr.pred <- predict(pcr.model, data=fifa.test, ncomp = 6)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties ~ ., data = fifa[train,], scale =TRUE, validation = "CV")
pcr.pred <- predict(pcr.model, data=fifa.test, ncomp = 6)
predplot(pcr.pred)
library(pls)
#PCR on training data using CV
set.seed(2)
pcr.fit = pcr(Penalties ~., data=fifa, scale=TRUE, validation="CV")
summary(pcr.fit)
#plot validation
validationplot(pcr.fit, val.type="MSEP")
#plot predicted vs. measured values
predplot(pcr.fit)
#plot coefficients
coefplot(pcr.fit)
#Train PCR on test data, then test
set.seed(2)
train = sample(1:nrow(fifa), nrow(fifa)/2)
test = (-train)
fifa.test = fifa[test]
#PCR model
pcr.model <- pcr(Penalties ~ ., data = fifa[train,], scale =TRUE, validation = "CV")
pcr.pred <- predict(pcr.model, data=fifa.test, ncomp = 6)
mean((pcr.pred - test)^2)
